// Mocks generated by Mockito 5.4.2 from annotations
// in media_probe/test/_utils/test_data.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i7;
import 'package:dio/dio.dart' as _i10;
import 'package:media_probe/src/core/enums/period_enums.dart' as _i13;
import 'package:media_probe/src/core/network/dio_client.dart' as _i19;
import 'package:media_probe/src/core/network/network_exception.dart' as _i15;
import 'package:media_probe/src/data/datasource/local/app_database.dart'
    as _i11;
import 'package:media_probe/src/data/datasource/local/DAO/article_dao.dart'
    as _i2;
import 'package:media_probe/src/data/datasource/remote/article/article_remote_data_source.dart'
    as _i12;
import 'package:media_probe/src/data/models/article_list_model/article_list_model.dart'
    as _i6;
import 'package:media_probe/src/data/models/article_model/article_model.dart'
    as _i17;
import 'package:media_probe/src/domain/entities/_lite/lite_article_entity.dart'
    as _i9;
import 'package:media_probe/src/domain/entities/article/article.dart' as _i5;
import 'package:media_probe/src/domain/entities/article/media.dart' as _i18;
import 'package:media_probe/src/domain/entities/article_list/article_list.dart'
    as _i8;
import 'package:media_probe/src/domain/repositories/article/article_repository.dart'
    as _i14;
import 'package:media_probe/src/domain/usecases/article_usecases.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeArticleDao_0 extends _i1.SmartFake implements _i2.ArticleDao {
  _FakeArticleDao_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamController_1<T> extends _i1.SmartFake
    implements _i3.StreamController<T> {
  _FakeStreamController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseExecutor_2 extends _i1.SmartFake
    implements _i4.DatabaseExecutor {
  _FakeDatabaseExecutor_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArticle_3 extends _i1.SmartFake implements _i5.Article {
  _FakeArticle_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArticleListModel_4 extends _i1.SmartFake
    implements _i6.ArticleListModel {
  _FakeArticleListModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_5<L, R> extends _i1.SmartFake implements _i7.Either<L, R> {
  _FakeEither_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArticleList_6 extends _i1.SmartFake implements _i8.ArticleList {
  _FakeArticleList_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLiteArticleEntity_7 extends _i1.SmartFake
    implements _i9.LiteArticleEntity {
  _FakeLiteArticleEntity_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_8<T> extends _i1.SmartFake implements _i10.Response<T> {
  _FakeResponse_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i11.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ArticleDao get articleDao => (super.noSuchMethod(
        Invocation.getter(#articleDao),
        returnValue: _FakeArticleDao_0(
          this,
          Invocation.getter(#articleDao),
        ),
      ) as _i2.ArticleDao);
  @override
  _i3.StreamController<String> get changeListener => (super.noSuchMethod(
        Invocation.getter(#changeListener),
        returnValue: _FakeStreamController_1<String>(
          this,
          Invocation.getter(#changeListener),
        ),
      ) as _i3.StreamController<String>);
  @override
  set changeListener(_i3.StreamController<String>? _changeListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #changeListener,
          _changeListener,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.DatabaseExecutor get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabaseExecutor_2(
          this,
          Invocation.getter(#database),
        ),
      ) as _i4.DatabaseExecutor);
  @override
  set database(_i4.DatabaseExecutor? _database) => super.noSuchMethod(
        Invocation.setter(
          #database,
          _database,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [ArticleDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDao extends _i1.Mock implements _i2.ArticleDao {
  MockArticleDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i9.LiteArticleEntity>?> getBookmarkedArticles() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookmarkedArticles,
          [],
        ),
        returnValue: _i3.Future<List<_i9.LiteArticleEntity>?>.value(),
      ) as _i3.Future<List<_i9.LiteArticleEntity>?>);
  @override
  _i3.Future<void> insertArticle(_i9.LiteArticleEntity? article) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertArticle,
          [article],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> deleteArticle(_i9.LiteArticleEntity? article) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteArticle,
          [article],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [LiteArticleEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockLiteArticleEntity extends _i1.Mock implements _i9.LiteArticleEntity {
  MockLiteArticleEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set uri(String? _uri) => super.noSuchMethod(
        Invocation.setter(
          #uri,
          _uri,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set url(String? _url) => super.noSuchMethod(
        Invocation.setter(
          #url,
          _url,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set assetId(int? _assetId) => super.noSuchMethod(
        Invocation.setter(
          #assetId,
          _assetId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set source(String? _source) => super.noSuchMethod(
        Invocation.setter(
          #source,
          _source,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set publishedDate(String? _publishedDate) => super.noSuchMethod(
        Invocation.setter(
          #publishedDate,
          _publishedDate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set updated(String? _updated) => super.noSuchMethod(
        Invocation.setter(
          #updated,
          _updated,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set section(String? _section) => super.noSuchMethod(
        Invocation.setter(
          #section,
          _section,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set subsection(String? _subsection) => super.noSuchMethod(
        Invocation.setter(
          #subsection,
          _subsection,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nytdsection(String? _nytdsection) => super.noSuchMethod(
        Invocation.setter(
          #nytdsection,
          _nytdsection,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set adxKeywords(String? _adxKeywords) => super.noSuchMethod(
        Invocation.setter(
          #adxKeywords,
          _adxKeywords,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set byline(String? _byline) => super.noSuchMethod(
        Invocation.setter(
          #byline,
          _byline,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set type(String? _type) => super.noSuchMethod(
        Invocation.setter(
          #type,
          _type,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set title(String? _title) => super.noSuchMethod(
        Invocation.setter(
          #title,
          _title,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set abstract(String? _abstract) => super.noSuchMethod(
        Invocation.setter(
          #abstract,
          _abstract,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set imageUrl(String? _imageUrl) => super.noSuchMethod(
        Invocation.setter(
          #imageUrl,
          _imageUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set caption(String? _caption) => super.noSuchMethod(
        Invocation.setter(
          #caption,
          _caption,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Article toArticle() => (super.noSuchMethod(
        Invocation.method(
          #toArticle,
          [],
        ),
        returnValue: _FakeArticle_3(
          this,
          Invocation.method(
            #toArticle,
            [],
          ),
        ),
      ) as _i5.Article);
}

/// A class which mocks [ArticleRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRemoteDataSource extends _i1.Mock
    implements _i12.ArticleRemoteDataSource {
  MockArticleRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i6.ArticleListModel> getMostPopularArticles(
          {required _i13.PeriodEnums? period}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMostPopularArticles,
          [],
          {#period: period},
        ),
        returnValue:
            _i3.Future<_i6.ArticleListModel>.value(_FakeArticleListModel_4(
          this,
          Invocation.method(
            #getMostPopularArticles,
            [],
            {#period: period},
          ),
        )),
      ) as _i3.Future<_i6.ArticleListModel>);
}

/// A class which mocks [ArticleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRepository extends _i1.Mock implements _i14.ArticleRepository {
  MockArticleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i7.Either<_i15.NetworkExceptions, _i8.ArticleList>>
      getMostPopularArticles({required _i13.PeriodEnums? period}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getMostPopularArticles,
              [],
              {#period: period},
            ),
            returnValue: _i3.Future<
                    _i7.Either<_i15.NetworkExceptions, _i8.ArticleList>>.value(
                _FakeEither_5<_i15.NetworkExceptions, _i8.ArticleList>(
              this,
              Invocation.method(
                #getMostPopularArticles,
                [],
                {#period: period},
              ),
            )),
          ) as _i3.Future<_i7.Either<_i15.NetworkExceptions, _i8.ArticleList>>);
  @override
  _i3.Future<_i7.Either<String, List<_i5.Article>?>> getBookmarkedArticles() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookmarkedArticles,
          [],
        ),
        returnValue: _i3.Future<_i7.Either<String, List<_i5.Article>?>>.value(
            _FakeEither_5<String, List<_i5.Article>?>(
          this,
          Invocation.method(
            #getBookmarkedArticles,
            [],
          ),
        )),
      ) as _i3.Future<_i7.Either<String, List<_i5.Article>?>>);
  @override
  _i3.Future<_i7.Either<String, bool>> insertArticle(
          {required _i5.Article? article}) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertArticle,
          [],
          {#article: article},
        ),
        returnValue: _i3.Future<_i7.Either<String, bool>>.value(
            _FakeEither_5<String, bool>(
          this,
          Invocation.method(
            #insertArticle,
            [],
            {#article: article},
          ),
        )),
      ) as _i3.Future<_i7.Either<String, bool>>);
  @override
  _i3.Future<_i7.Either<String, bool>> deleteArticle(
          {required _i5.Article? article}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteArticle,
          [],
          {#article: article},
        ),
        returnValue: _i3.Future<_i7.Either<String, bool>>.value(
            _FakeEither_5<String, bool>(
          this,
          Invocation.method(
            #deleteArticle,
            [],
            {#article: article},
          ),
        )),
      ) as _i3.Future<_i7.Either<String, bool>>);
}

/// A class which mocks [ArticleUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleUsecases extends _i1.Mock implements _i16.ArticleUsecases {
  MockArticleUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i7.Either<_i15.NetworkExceptions, _i8.ArticleList>>
      getMostPopularArticles({required _i13.PeriodEnums? period}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getMostPopularArticles,
              [],
              {#period: period},
            ),
            returnValue: _i3.Future<
                    _i7.Either<_i15.NetworkExceptions, _i8.ArticleList>>.value(
                _FakeEither_5<_i15.NetworkExceptions, _i8.ArticleList>(
              this,
              Invocation.method(
                #getMostPopularArticles,
                [],
                {#period: period},
              ),
            )),
          ) as _i3.Future<_i7.Either<_i15.NetworkExceptions, _i8.ArticleList>>);
  @override
  _i3.Future<_i7.Either<String, List<_i5.Article>?>> getBookmarkedArticles() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookmarkedArticles,
          [],
        ),
        returnValue: _i3.Future<_i7.Either<String, List<_i5.Article>?>>.value(
            _FakeEither_5<String, List<_i5.Article>?>(
          this,
          Invocation.method(
            #getBookmarkedArticles,
            [],
          ),
        )),
      ) as _i3.Future<_i7.Either<String, List<_i5.Article>?>>);
  @override
  _i3.Future<_i7.Either<String, bool>> insertArticle(
          {required _i5.Article? article}) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertArticle,
          [],
          {#article: article},
        ),
        returnValue: _i3.Future<_i7.Either<String, bool>>.value(
            _FakeEither_5<String, bool>(
          this,
          Invocation.method(
            #insertArticle,
            [],
            {#article: article},
          ),
        )),
      ) as _i3.Future<_i7.Either<String, bool>>);
  @override
  _i3.Future<_i7.Either<String, bool>> deleteArticle(
          {required _i5.Article? article}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteArticle,
          [],
          {#article: article},
        ),
        returnValue: _i3.Future<_i7.Either<String, bool>>.value(
            _FakeEither_5<String, bool>(
          this,
          Invocation.method(
            #deleteArticle,
            [],
            {#article: article},
          ),
        )),
      ) as _i3.Future<_i7.Either<String, bool>>);
}

/// A class which mocks [ArticleModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleModel extends _i1.Mock implements _i17.ArticleModel {
  MockArticleModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
  @override
  _i5.Article toEntity() => (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [],
        ),
        returnValue: _FakeArticle_3(
          this,
          Invocation.method(
            #toEntity,
            [],
          ),
        ),
      ) as _i5.Article);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [ArticleListModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleListModel extends _i1.Mock implements _i6.ArticleListModel {
  MockArticleListModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
  @override
  _i8.ArticleList toEntity() => (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [],
        ),
        returnValue: _FakeArticleList_6(
          this,
          Invocation.method(
            #toEntity,
            [],
          ),
        ),
      ) as _i8.ArticleList);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Article].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticle extends _i1.Mock implements _i5.Article {
  MockArticle() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set uri(String? _uri) => super.noSuchMethod(
        Invocation.setter(
          #uri,
          _uri,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set url(String? _url) => super.noSuchMethod(
        Invocation.setter(
          #url,
          _url,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set assetId(int? _assetId) => super.noSuchMethod(
        Invocation.setter(
          #assetId,
          _assetId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set source(String? _source) => super.noSuchMethod(
        Invocation.setter(
          #source,
          _source,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set publishedDate(String? _publishedDate) => super.noSuchMethod(
        Invocation.setter(
          #publishedDate,
          _publishedDate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set updated(String? _updated) => super.noSuchMethod(
        Invocation.setter(
          #updated,
          _updated,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set section(String? _section) => super.noSuchMethod(
        Invocation.setter(
          #section,
          _section,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set subsection(String? _subsection) => super.noSuchMethod(
        Invocation.setter(
          #subsection,
          _subsection,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nytdsection(String? _nytdsection) => super.noSuchMethod(
        Invocation.setter(
          #nytdsection,
          _nytdsection,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set adxKeywords(String? _adxKeywords) => super.noSuchMethod(
        Invocation.setter(
          #adxKeywords,
          _adxKeywords,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set byline(String? _byline) => super.noSuchMethod(
        Invocation.setter(
          #byline,
          _byline,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set type(String? _type) => super.noSuchMethod(
        Invocation.setter(
          #type,
          _type,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set title(String? _title) => super.noSuchMethod(
        Invocation.setter(
          #title,
          _title,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set abstract(String? _abstract) => super.noSuchMethod(
        Invocation.setter(
          #abstract,
          _abstract,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set caption(String? _caption) => super.noSuchMethod(
        Invocation.setter(
          #caption,
          _caption,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set media(List<_i18.Media>? _media) => super.noSuchMethod(
        Invocation.setter(
          #media,
          _media,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set etaId(int? _etaId) => super.noSuchMethod(
        Invocation.setter(
          #etaId,
          _etaId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set imageUrl(String? _imageUrl) => super.noSuchMethod(
        Invocation.setter(
          #imageUrl,
          _imageUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.LiteArticleEntity toLiteArticleEntity() => (super.noSuchMethod(
        Invocation.method(
          #toLiteArticleEntity,
          [],
        ),
        returnValue: _FakeLiteArticleEntity_7(
          this,
          Invocation.method(
            #toLiteArticleEntity,
            [],
          ),
        ),
      ) as _i9.LiteArticleEntity);
}

/// A class which mocks [ArticleList].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleList extends _i1.Mock implements _i8.ArticleList {
  MockArticleList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set status(String? _status) => super.noSuchMethod(
        Invocation.setter(
          #status,
          _status,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set copyright(String? _copyright) => super.noSuchMethod(
        Invocation.setter(
          #copyright,
          _copyright,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set numResults(int? _numResults) => super.noSuchMethod(
        Invocation.setter(
          #numResults,
          _numResults,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set results(List<_i5.Article>? _results) => super.noSuchMethod(
        Invocation.setter(
          #results,
          _results,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i19.DioClient {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i10.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i3.Future<_i10.Response<dynamic>>.value(_FakeResponse_8<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i3.Future<_i10.Response<dynamic>>);
  @override
  _i3.Future<_i10.Response<dynamic>> post(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i3.Future<_i10.Response<dynamic>>.value(_FakeResponse_8<dynamic>(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i3.Future<_i10.Response<dynamic>>);
  @override
  _i3.Future<_i10.Response<dynamic>> put(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i3.Future<_i10.Response<dynamic>>.value(_FakeResponse_8<dynamic>(
          this,
          Invocation.method(
            #put,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i3.Future<_i10.Response<dynamic>>);
  @override
  _i3.Future<_i10.Response<dynamic>> patch(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i3.Future<_i10.Response<dynamic>>.value(_FakeResponse_8<dynamic>(
          this,
          Invocation.method(
            #patch,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i3.Future<_i10.Response<dynamic>>);
  @override
  _i3.Future<dynamic> delete(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}
